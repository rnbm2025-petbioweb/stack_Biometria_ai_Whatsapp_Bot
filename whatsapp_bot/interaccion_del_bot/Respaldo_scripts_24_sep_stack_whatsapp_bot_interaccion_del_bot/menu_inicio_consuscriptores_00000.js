// menu_inicio.js
const fs = require('fs');
const path = require('path');
const utils = require('./utils_bot');

// Importar m√≥dulos de men√∫ existentes
const menuIdentidadCorporativa = require('./menu_identidad_corporativa');
const menuODS = require('./ODS_NUMERAL_6_menu_inicio');
const menuTarifas = require('./tarifas_menu');
const menuServicios = require('./servicios_menu');
const suscripcionesCuidadores = require('./suscripciones_cuidadores_bot');

const MENU_TEXT = `
üìã *Men√∫ PETBIO*

1Ô∏è‚É£ Identidad Corporativa
2Ô∏è‚É£ Pol√≠ticas de tratamiento de datos
3Ô∏è‚É£ Registro de usuario
4Ô∏è‚É£ Registro de mascotas
5Ô∏è‚É£ Redes sociales
6Ô∏è‚É£ ODS PETBIO üåç
7Ô∏è‚É£ Tarifas üí≤
8Ô∏è‚É£ Servicios üì¶
9Ô∏è‚É£ Suscripciones Cuidadores

üëâ Responde con el n√∫mero de la opci√≥n que deseas consultar.
`;

async function menuInicio(msg, sessionFile, session) {
    // Asegurar estructura m√≠nima de session
    session.type = session.type || 'menu_inicio';
    session.step = session.step || null;
    session.data = session.data || {};
    session.lastActive = Date.now();
    session.lastGreeted = session.lastGreeted || false;

    // Guardar sesi√≥n actualizada
    fs.writeFileSync(sessionFile, JSON.stringify(session, null, 2));

    // Mostrar men√∫ principal
    await msg.reply(utils.justificarTexto(MENU_TEXT, 40));

    // Directorio de sesi√≥n
    const sessionDir = path.dirname(sessionFile);
    if (!fs.existsSync(sessionDir)) fs.mkdirSync(sessionDir, { recursive: true });

    // Opciones del men√∫
    const opciones = {
        '1': async () => menuIdentidadCorporativa(msg),
        '2': async () => msg.reply(utils.justificarTexto(
            "üîí Est√°s a punto de abrir el enlace de pol√≠ticas de tratamiento de datos:\nüìú https://siac2025.com/"
        )),
        '3': async () => {
            session.type = 'registro_usuario';
            session.step = 'username';
            session.data = {};
            session.lastActive = Date.now();
            fs.writeFileSync(sessionFile, JSON.stringify(session, null, 2));
            await msg.reply(utils.justificarTexto(
                "üë§ Registro de usuario ‚Äî escribe tu nombre:\n(escribe *cancelar* para abortar)"
            ));
        },
        '4': async () => {
            session.type = 'registro_mascota';
            session.step = 'nombre';
            session.data = {};
            session.lastActive = Date.now();
            fs.writeFileSync(sessionFile, JSON.stringify(session, null, 2));
            await msg.reply(utils.justificarTexto(
                "üê∂ Registro de mascota ‚Äî escribe el nombre de la mascota:\n(escribe *cancelar* para abortar)"
            ));
        },
        '5': async () => msg.reply(utils.justificarTexto(
            "üåê Est√°s a punto de abrir nuestras redes sociales PETBIO:\nüîó https://registro.siac2025.com/2025/02/11/48/"
        )),
        '6': async () => menuODS(msg, sessionFile, session),
        '7': async () => menuTarifas(msg, sessionFile, session),
        '8': async () => menuServicios(msg, sessionFile),
        '9': async () => suscripcionesCuidadores(msg),
    };

    // Funci√≥n para manejar la opci√≥n elegida
    const handleOption = async (option) => {
        if (opciones[option]) {
            await opciones[option]();
        } else {
            await msg.reply(utils.justificarTexto(
                "‚ùå Opci√≥n no v√°lida. Aqu√≠ est√° el men√∫ nuevamente:\n" + MENU_TEXT
            ));
        }
    };

    return handleOption;
}

module.exports = menuInicio;
